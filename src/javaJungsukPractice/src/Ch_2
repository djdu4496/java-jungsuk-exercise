[2-1] 다음 표의 빈 칸에 8개의 기본형(primitive type)을 알맞은 자리에 넣으시오.
	- 논리형(1, 2, 4, 8byte): boolean, X, X, X
	- 문자형(1, 2, 4, 8byte): X, Char, X, X
	- 정수형(1, 2, 4, 8byte): byte, short, int, long 
	- 실수형(1, 2, 4, 8byte): X, X, float, double
	
[2-2] 주민등록번호를 숫자로 저장하고자 한다. 
	  이 값을 저장하기 위해서는 어떤 자료형 (data type)을 선택해야 할까? 
	  regNo라는 이름의 변수를 선언하고 자신의 주민등록번호로 초기화 하는 한 줄의 코드를 적으시오.
	- Long regNo = 0000000000000L;\
[2-3] 다음의 문장에서 리터럴, 변수, 상수, 키워드를 적으시오. 
	int i = 100;
	long l =100L;
    final float PI = 3.14f;
		- 리터럴 : 100, 100L, 3.14f (오답) 
		- 변수 : i, l,
		- 키워드 : int, long, final, float
		- 상수 : PI(오답)
[2-4] 다음 중 기본형(primitive type)이 아닌 것은? 
	a. int
	b. Byte
    c. double
    d. boolean
    	- b. byte는 기본형 타입이 맞지만, Byte라 기재하면 다른 키워드로 식별한다.
[2-5] 다음 문장들의 출력결과를 적으세요. 오류가 있는 문장의 경우, 괄호 안에 ‘오류’라고 적으시오.
	System.out.println(“1” + “2”) →(12) 
	System.out.println(true + “”) →(true) 
	System.out.println(‘A' + 'B') →(AB) 
	System.out.println('1' + 2) →(51) 
	System.out.println('1' + '2') →(99 ) 
	System.out.println('J' + “ava”) →(Java) 
	System.out.println(true + null) →(오류 )
	
// 문자와 문자의 덧셈연산의 결과는 int형 정수값이 된다. 
// 왜냐하면 int형보다 작은 타입(byte, char, short)은 int형으로 변환된 후에 덧셈연산이 진행되기 때문이다.
[2-6] 다음 중 키워드가 아닌 것은?(모두 고르시오) 
	a. if
    b. True
    c. NULL
    d. Class
    e. System
    
    - b. True, c.Class
    - 키워드도 대소문자를 구분하여 사용해야 한다.
[2-7] 다음 중 변수의 이름으로 사용할 수 있는 것은? (모두 고르시오) 
	a. $ystem
	b. channel#5 
	c. 7eleven 
	d. If
	e. 자바
    f. new
    g. $MAX_NUM
    h. hello@com
    
    - a, d, e, g
    - 사용할 수 없는 이유
    	- b: 특수문자는 '_'과 '$'만 허용한다.
    	- c: 문자로만 시작할 수 있다.
    	- f: new 연산자는 키워드이기 때문에 허용되지 않는다.
    	- h: 특수문자는 '_'과 '$'만 허용한다.
[2-8] 참조형 변수(reference type)와 같은 크기의 기본형(primitive type)은? (모두 고 르시오)
    a. int(4 byte)
    b. long(8 byte)
    c. short(2 byte)
    d. float(4 byte)
    e. double(8 byte)
    
    - 답: a. int, d. long
    - 이유: 참조형 변수의 크기는 전부 4byte이다.
    
[2-9] 다음 중 형변환을 생략할 수 있는 것은? (모두 고르시오) 
	- byte b = 10;
    - char ch = 'A';
    - int i = 100;
	- long l = 1000L;
		
	-답: d, e
	- 이유
		a. b = (byte)i; // int(4byte) → byte(1byte)이므로 반드시 형변환 필요
		b. ch = (char)b; // byte(1byte) → char(2byte)이지만 범위가 달라서 형변환 필요 
		c. short s = (short)ch; // char,short은 2byte이지만 범위가 달라서 형변환 필요 
		d. float f = (float)l; // float(4byte)의 범위가 long(8byte)보다 커서 생략가능 
		e. i = (int)ch; // char(2 byte) → int(4byte)이므로 생략가능
	

[2-10] char타입의 변수에 저장될 수 있는 정수 값의 범위는? (10진수로 적으시오)
	- 답: 0 ~ 2¹⁶(265534)
	- 이유: char의 크기는 2byte이자 16bit이다. 따라서 0 포함 65535개가 범위가 된다.

[2-11] 다음중 변수를 잘못 초기화 한 것은? (모두 고르시오) 
	a. byte b = 256;
    b. char c = '';
    c. char answer = 'no';
    d. float f = 3.14
    e. double d = 1.4e3f;
    
    - 답: a, b, c, d
    - 이유	
    	- a: byte의 범위는 -128 ~ 127이다.
    	- b, c: char는 반드시 한 개의 문자를 지정해야 한다.
    	- d: 3.14는 뒤에 d가 생략되어 있다. 접미사 f를 붙이거나 형 변환이 필요하다.
    	
    	- e: double의 크기는 8byte이고, float의 크기는 4byte이기 떄문에 double에 float값을 넣을 수 있다.

    
[2-12] 다음 중 main메서드의 선언부로 알맞은 것은? (모두 고르시오) 
	a. public static void main(String[] args)
	b. public static void main(String args[])
	c. public static void main(String[] arv)
	d. public void static main(String[] args) 
	e. static public void main(String[] args)
	
	- 답: a, b, c, e
	- 이유
		- a: default
		- b: []가 뒤로 붙어도 됨
		- c: 매개변수 arg의 이름은 무엇이든 상관 없다.
		- d: 반환타입 void는 반드시 main 앞에 위치해야 한다.
		- e: 접근제한자와 static은 위치가 바뀌어도 된다.
[2-13] 다음 중 타입과 기본값이 잘못 연결된 것은? (모두 고르시오) 
	a. boolean - false
	b. char - '\u0000'
	c. float - 0.0
    d. int - 0
    e. long - 0
    f. String - ""
    
    - 답: c, e, f